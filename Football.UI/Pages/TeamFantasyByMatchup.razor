@page "/team-fantasy/{team}/{opponent}/{week}"

@using Football.Fantasy.Models;
@using Football.UI.Helpers;
@using System.Text.Json
@using System.Text.Json.Serialization
@using ApexCharts;

@inject IHttpClientFactory ClientFactory;


<h5>@GetHeader()</h5>

@if (loading)
{
    <div class="spinner"></div>
}

@if(teamFantasy != null && opponentFantasy != null)
{
    if (teamFantasy.Count > 0 && opponentFantasy.Count > 0)
    {
        var qbTeam = teamFantasy.Where(t => t.Position == "QB").OrderByDescending(t => t.FantasyPoints).First();
        var qbOpp = opponentFantasy.Where(t => t.Position == "QB").OrderByDescending(t => t.FantasyPoints).First();
        graph.Add(new BarGraphComp { Label = "QB", TeamBar = qbTeam, OppBar = qbOpp });
        var rbTeam = teamFantasy.Where(t => t.Position == "RB").OrderByDescending(t => t.FantasyPoints).Take(2).ToList();
        var rbOpp = opponentFantasy.Where(t => t.Position == "RB").OrderByDescending(t => t.FantasyPoints).Take(2).ToList();
        for (int i = 0; i < Math.Min(rbTeam.Count, rbOpp.Count); i++)
        {
            graph.Add(new BarGraphComp { Label = "RB", TeamBar = rbTeam.ElementAt(i), OppBar = rbOpp.ElementAt(i) });
        }
        var wrTeam = teamFantasy.Where(t => t.Position == "WR").OrderByDescending(t => t.FantasyPoints).Take(2).ToList();
        var wrOpp = opponentFantasy.Where(t => t.Position == "WR").OrderByDescending(t => t.FantasyPoints).Take(2).ToList();
        for (int i = 0; i < 2; i++)
        {
            if (wrTeam.ElementAt(i) != null && wrOpp.ElementAt(i) != null)
            {
                graph.Add(new BarGraphComp { Label = "WR", TeamBar = wrTeam.ElementAt(i), OppBar = wrOpp.ElementAt(i) });
            }
        }
        var teTeam = teamFantasy.Where(t => t.Position == "TE").OrderByDescending(t => t.FantasyPoints).First();
        var teOpp = opponentFantasy.Where(t => t.Position == "TE").OrderByDescending(t => t.FantasyPoints).First();
        graph.Add(new BarGraphComp { Label = "TE", TeamBar = teTeam, OppBar = teOpp });
        var dstTeam = teamFantasy.Where(t => t.Position == "DST").First();
        var dstOpp = opponentFantasy.Where(t => t.Position == "DST").First();
        graph.Add(new BarGraphComp { Label = "DST", TeamBar = dstTeam, OppBar = dstOpp });

        var teamLogo = string.Format("{0}/{1}.png", "https://localhost:7176/Logos", team);
        var oppLogo = string.Format("{0}/{1}.png", "https://localhost:7176/Logos", opponent);

        <div class="table_container">

            <table class="boostrap4_table_head_dark_striped_rounded_with_shadow">
                <thead>
                    <tr>
                        <th></th>
                        <th>@team <img src="@teamLogo" width="30" height="30"></th>
                        <th>@opponent <img src="@oppLogo" width="30" height="30"></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><b style="color:@form.PositionColor("QB")">QB</b></td>
                        <td><a class="page-links" href="@PlayerPage(qbTeam.PlayerId)">@qbTeam.Name</a>: @qbTeam.FantasyPoints</td>
                        <td><a class="page-links" href="@PlayerPage(qbOpp.PlayerId)">@qbOpp.Name</a>: @qbOpp.FantasyPoints</td>
                    </tr>
                    <tr>
                        <td><b style="color:@form.PositionColor("RB")">RB</b></td>
                        <td><a class="page-links" href="@PlayerPage(rbTeam.ElementAt(0).PlayerId)">@rbTeam.ElementAt(0).Name</a>: @rbTeam.ElementAt(0).FantasyPoints</td>
                        <td><a class="page-links" href="@PlayerPage(rbOpp.ElementAt(0).PlayerId)">@rbOpp.ElementAt(0).Name</a>: @rbOpp.ElementAt(0).FantasyPoints</td>
                    </tr>
                    <tr>
                        <td><b style="color:@form.PositionColor("RB")">RB</b></td>
                        <td><a class="page-links" href="@PlayerPage(rbTeam.ElementAt(1).PlayerId)">@rbTeam.ElementAt(1).Name</a>: @rbTeam.ElementAt(1).FantasyPoints</td>
                        <td><a class="page-links" href="@PlayerPage(rbOpp.ElementAt(1).PlayerId)">@rbOpp.ElementAt(1).Name</a>: @rbOpp.ElementAt(1).FantasyPoints</td>
                    </tr>
                    <tr>
                        <td><b style="color:@form.PositionColor("WR")">WR</b></td>
                        <td><a class="page-links" href="@PlayerPage(wrTeam.ElementAt(0).PlayerId)">@wrTeam.ElementAt(0).Name</a>: @wrTeam.ElementAt(0).FantasyPoints</td>
                        <td><a class="page-links" href="@PlayerPage(wrOpp.ElementAt(0).PlayerId)">@wrOpp.ElementAt(0).Name</a>: @wrOpp.ElementAt(0).FantasyPoints</td>
                    </tr>
                    <tr>
                        <td><b style="color:@form.PositionColor("WR")">WR</b></td>
                        <td><a class="page-links" href="@PlayerPage(wrTeam.ElementAt(1).PlayerId)">@wrTeam.ElementAt(1).Name</a>: @wrTeam.ElementAt(1).FantasyPoints</td>
                        <td><a class="page-links" href="@PlayerPage(wrOpp.ElementAt(1).PlayerId)">@wrOpp.ElementAt(1).Name</a>: @wrOpp.ElementAt(1).FantasyPoints</td>
                    </tr>
                    <tr>
                        <td><b style="color:@form.PositionColor("TE")">TE</b></td>
                        <td><a class="page-links" href="@PlayerPage(teTeam.PlayerId)">@teTeam.Name</a>: @teTeam.FantasyPoints</td>
                        <td><a class="page-links" href="@PlayerPage(teOpp.PlayerId)">@teOpp.Name</a>: @teOpp.FantasyPoints</td>
                    </tr>
                    <tr>
                        <td><b style="color:@form.PositionColor("DST")">DST</b></td>
                        <td><a class="page-links" href="@PlayerPage(dstTeam.PlayerId)">@dstTeam.Name</a>: @dstTeam.FantasyPoints</td>
                        <td><a class="page-links" href="@PlayerPage(dstOpp.PlayerId)">@dstOpp.Name</a>: @dstOpp.FantasyPoints</td>
                    </tr>
                </tbody>                                          
            </table>
        </div>
        <hr style="width:100%;text-align:left;margin-left:0">
        <div style="height:10px;font-size:1px;">&nbsp;</div>
        <h5>Fantasy Points by Position</h5>
        <ApexChart TItem="BarGraphComp"
                   Height="400">
            <ApexPointSeries TItem="BarGraphComp"
                             Items="graph"
                             Name="@team"
                             XValue="@(e => e.Label)"
                             YAggregate="@(e => e.Sum(e => (decimal)e.TeamBar.FantasyPoints))"                            
                             SeriesType="SeriesType.Bar"
                             Color="#3633FF" />

            <ApexPointSeries TItem="BarGraphComp"
                             Items="graph"
                             Name="@opponent"
                             XValue="@(e => e.Label)"
                             YAggregate="@(e => e.Sum(e => (decimal)e.OppBar.FantasyPoints))"                      
                             SeriesType="SeriesType.Bar"
                             Color="#E51C15" />
        </ApexChart>
    }
}

@code {
    [Parameter]
    public string team { get; set; } = "";
    [Parameter]
    public string opponent { get; set; } = "";
    [Parameter]
    public string week { get; set; } = "";

    public bool loading { get; set; }
    public bool shouldRender { get; set; }
    public bool badRequestError { get; set; }

    public List<WeeklyFantasy>? teamFantasy = [];
    public List<WeeklyFantasy>? opponentFantasy = [];

    public List<BarGraphComp> graph = [];

    public Formatter form = new();

    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        teamFantasy = await GetTeamFantasy(team, week);
        opponentFantasy = await GetTeamFantasy(opponent, week);
        loading = false;
        shouldRender = true;
    }

    private async Task<List<WeeklyFantasy>?> GetTeamFantasy(string team, string week)
    {
        var url = string.Format("{0}/{1}/{2}", "https://localhost:7028/api/Team/weekly-fantasy", team, week);
        var request = new HttpRequestMessage(HttpMethod.Get, url);
        request.Headers.Add("Accept", "application/json");
        var client = ClientFactory.CreateClient();
        var response = await client.SendAsync(request);
        if (response.IsSuccessStatusCode)
        {
            var options = new JsonSerializerOptions { PropertyNameCaseInsensitive = true };
            using var responseStream = await response.Content.ReadAsStreamAsync();
            var temp = await JsonSerializer.DeserializeAsync<List<WeeklyFantasy>>(responseStream, options);
            if (temp is not null)
            {
                temp.ForEach(t => t.FantasyPoints = Math.Round(t.FantasyPoints, 2));
            }
            return temp;
        }
        else return null;
    }

    private string GetHeader() => team + " vs " + opponent + " Fantasy Results";

    private string PlayerPage(int playerId) => "Players/" + playerId.ToString();

    public class BarGraphComp
    {
        public string Label { get; set; } = "";
        public WeeklyFantasy TeamBar { get; set; } = new();
        public WeeklyFantasy OppBar { get; set; } = new();
    }

}
