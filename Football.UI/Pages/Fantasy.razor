@page "/Fantasy"
<PageTitle>Fantasy</PageTitle>
<h3>Fantasy</h3>

@using System.Text.Json
@using System.Text.Json.Serialization
@using Football.Models;
@inject IHttpClientFactory ClientFactory

<EditForm Model="search" OnSubmit="GetFantasy">
    <TextBoxName @bind-Value="this.Value" />
    <TextBoxSeason @bind-Season="this.Season" />
    <button class="button-22" type="submit">Submit</button>
</EditForm>
<div style="height:10px;font-size:1px;">&nbsp;</div>

@if(!badRequestError && youTried)
{
    <div>
    <button class="button-22" role="button" @onclick="RefreshFantasy">
        Refresh
    </button>
        @if (refreshed)
        {
            <p>Records refreshed</p>
        }
    </div>
    <div style="height:10px;font-size:1px;">&nbsp;</div>

        <div class="table_container"> 
        <table class="boostrap4_table_head_dark_striped_rounded_with_shadow">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Season</th>
                    <th>Total</th>
                    <th>Passing</th>
                    <th>Rushing</th>
                    <th>Receiving</th>
                </tr>
            </thead>
            @foreach(var fp in fantasy)
            {
                <tr>
                    <td>@fp.Name</td>
                    <td>@fp.Season</td>
                    <td>@fp.TotalPoints</td>
                    <td>@fp.PassingPoints</td>
                    <td>@fp.RushingPoints</td>
                    <td>@fp.ReceivingPoints</td>
                </tr>
            }
            </table>
    </div>
}

else if (badRequestError)
{
    <p> No player found. Please try again.</p>
}

else if(!badRequestError && !fantasy.Any() && youTried)
{
    <p>No results found</p>
}

@code {
    private string Value { get; set; } = "";
    private string Season { get; set; } = "";
    private Search search = new();

    private bool badRequestError;
    private bool youTried = false;

    private List<FantasyPointsWithName> fantasy = new();
    private bool refreshed = false;

    private async Task GetFantasy()
    {
        var season = Season;
        if(Season == "")
        {
            season = "0";
        }
        var request = new HttpRequestMessage(HttpMethod.Get, "https://localhost:7028/api/Fantasy/points/" + @Value + "/" + @season);
        request.Headers.Add("Accept", "application/json");
        var client = ClientFactory.CreateClient();
        var response = await client.SendAsync(request);
        if (response.IsSuccessStatusCode)
        {
            badRequestError = false;
            var options = new JsonSerializerOptions { PropertyNameCaseInsensitive = true };
            using var responseStream = await response.Content.ReadAsStreamAsync();
            fantasy = await JsonSerializer.DeserializeAsync<List<FantasyPointsWithName>>(responseStream, options);
        }
        else
        {
            badRequestError = true;
        }
        youTried = true;
    }

    private async Task RefreshFantasy()
    {
        if (fantasy.Any())
        {
            foreach(var f in fantasy)
            {
                var season = f.Season;
                var request = new HttpRequestMessage(HttpMethod.Post, "https://localhost:7028/api/Fantasy/refresh/" + @f.Name + "/" + f.Season);
                request.Headers.Add("Accept", "application/json");
                var client = ClientFactory.CreateClient();
                var response = await client.SendAsync(request);
            }
            refreshed = true;
        }
        else if(youTried && !fantasy.Any())
        {
            var season = Season;
            var name = Value;
            var request = new HttpRequestMessage(HttpMethod.Post, "https://localhost:7028/api/Fantasy/refresh/" + @name + "/" + @season);
            request.Headers.Add("Accept", "application/json");
            var client = ClientFactory.CreateClient();
            var response = await client.SendAsync(request);
            refreshed = true;
        }
    }

    public class Search
    {
        public string Value { get; set; } = "";
        public string Season { get; set; } = "";
    }

}
