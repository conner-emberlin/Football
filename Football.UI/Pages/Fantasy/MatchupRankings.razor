@page "/MatchupRankings"
<PageTitle>Matchup Rankings</PageTitle>

@using Football.UI.Helpers;
@using Football.UI.Interfaces;
@using Football.Api.Models.Fantasy;

@inject IFantasyService fantasyService;

<h4>Matchup Rankings</h4>

<div>
    @foreach (var position in format.Positions())
    {

        <input type="radio" name="players" id=" @position" value="@position"
        @onchange="SetPosition"
               checked=@(Position.Equals(position,StringComparison.OrdinalIgnoreCase)) />
        <label for="@position ">@position</label>

    }
</div>
<div style="height:10px;font-size:1px;">&nbsp;</div>
<button class="button-22" role="button" @onclick="HandleInput">
    Submit
</button>
<div style="height:10px;font-size:1px;">&nbsp;</div>

@if (loading)
{
    <div class="spinner"></div>
}

@if (Rankings.Any())
{
    <div style="height:10px;font-size:1px;">&nbsp;</div>
    <div class="table_container">
        <table class="base_table">
            <thead>
                <tr>
                    <th>Team</th>
                    <th>Games</th>
                    <th>
                        <span class="sort-link" onclick="@(() => SetTable("PointsAllowed"))">Total Pts</span>
                        <span class="oi @(tableSort.GetSortStyle("PointsAllowed"))"></span>
                    </th>
                    <th>
                        <span class="sort-link" onclick="@(() => SetTable("AvgPointsAllowed"))">Avg Pts</span>
                        <span class="oi @(tableSort.GetSortStyle("AvgPointsAllowed"))"></span>
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 1; i <= Rankings.Count; i++)
                {
                    <tr>
                        <td><a class="page-links" href="Teams/@Rankings.ElementAt(i-1).TeamId"> @Rankings.ElementAt(i-1).TeamDescription</a></td>
                        <td>@Rankings.ElementAt(i-1).GamesPlayed</td>
                        <td>@Math.Round((double)Rankings.ElementAt(i-1).PointsAllowed,2)</td>
                        <td>@Math.Round((double)Rankings.ElementAt(i-1).AvgPointsAllowed,2)</td>
                        <td>
                            <a href="top-opponents/@Rankings.ElementAt(i-1).TeamId/@Rankings.ElementAt(i-1).Position"> <i class="oi oi-magnifying-glass" /></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}




@code {
    public string Position { get; set; } = "Quarterback";
    public string positionEnum { get; set; } = "QB";
    public List<MatchupRankingModel>? Rankings = new();

    public bool loading { get; set; } = false;
    private bool shouldRender;

    private TableSort tableSort = new();
    private Formatter format = new();

    protected override bool ShouldRender() => shouldRender;

    public void SetPosition(ChangeEventArgs args)
    {
        Rankings?.Clear();
        tableSort = new();
        positionEnum = format.SetPosition(args);
    }
    private async Task HandleInput()
    {
        loading = true;
        Rankings?.Clear();
        shouldRender = true;
        Rankings = await fantasyService.GetMatchupRankingsRequest(positionEnum);
        loading = false;
        shouldRender = true;
    }

    private void SetTable(string columnName) => Rankings = tableSort.SortTable<MatchupRankingModel>(Rankings, columnName);

}
