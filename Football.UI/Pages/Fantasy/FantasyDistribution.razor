@page "/FantasyDistribution"
<PageTitle>Market Share</PageTitle>
@using Football.UI.Helpers;
@using Football.Api.Models.Fantasy;
@using Football.UI.Interfaces;
@inject IFantasyService fantasyService;
<h4>Fantasy Distribution</h4>

<div>
    @foreach (var position in format.Positions())
    {

        <input type="radio" name="players" id=" @position" value="@position"
        @onchange="SetPosition"
               checked=@(Position.Equals(position,StringComparison.OrdinalIgnoreCase)) />
        <label for="@position ">@position</label>

    }
</div>
<div style="height:10px;font-size:1px;">&nbsp;</div>
<button class="button-22" role="button" @onclick="Get">
    Submit
</button>
<div style="height:10px;font-size:1px;">&nbsp;</div>

@if (loading)
{
    <div class="spinner"></div>
}

@if (fantasyShare.Any())
{
    <div style="height:10px;font-size:1px;">&nbsp;</div>
    if (positionEnum == "QB")
    {
        <div class="table_container">
            <table class="base_table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>
                            <span class="sort-link" onclick="@(() => SetTable("PassYDShare"))">PassYD%</span>
                            <span class="oi @(tableSort.GetSortStyle("PassYDShare"))"></span>
                        </th>
                        <th>
                            <span class="sort-link" onclick="@(() => SetTable("PassTDShare"))">PassTD%</span>
                            <span class="oi @(tableSort.GetSortStyle("PassTDShare"))"></span>
                        </th>
                        <th>
                            <span class="sort-link" onclick="@(() => SetTable("RushYDShare"))">RushYD%</span>
                            <span class="oi @(tableSort.GetSortStyle("RushYDShare"))"></span>
                        </th>
                        <th>
                            <span class="sort-link" onclick="@(() => SetTable("RushTDShare"))">RushTD%</span>
                            <span class="oi @(tableSort.GetSortStyle("RushTDShare"))"></span>
                        </th>
                        <th> </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var f in fantasyShare)
                    {
                        <tr>
                            <td>
                                <a class="page-links" href="Players/@f.PlayerId"> @f.Name</a> &nbsp;
                                
                            </td>
                            <td>@Math.Round(f.PassYDShare * 100)</td>
                            <td>@Math.Round(f.PassTDShare * 100)</td>
                            <td>@Math.Round(f.RushYDShare * 100)</td>
                            <td>@Math.Round(f.RushTDShare * 100)</td>
                            <td><a href="dist-graph/@f.Position/@f.PlayerId"> <i class="oi oi-pie-chart" /></a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="table_container">
            <table class="base_table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>
                            <span class="sort-link" onclick="@(() => SetTable("RecShare"))">Rec%</span>
                            <span class="oi @(tableSort.GetSortStyle("RecShare"))"></span>
                        </th>
                        <th>
                            <span class="sort-link" onclick="@(() => SetTable("RecYDShare"))">RecYD%</span>
                            <span class="oi @(tableSort.GetSortStyle("RecYDShare"))"></span>
                        </th>
                        <th>
                            <span class="sort-link" onclick="@(() => SetTable("RecTDShare"))">RecTD%</span>
                            <span class="oi @(tableSort.GetSortStyle("RecTDShare"))"></span>
                        </th>
                        <th>
                            <span class="sort-link" onclick="@(() => SetTable("RushYDShare"))">RushYD%</span>
                            <span class="oi @(tableSort.GetSortStyle("RushYDShare"))"></span>
                        </th>
                        <th>
                            <span class="sort-link" onclick="@(() => SetTable("RushTDShare"))">RushTD%</span>
                            <span class="oi @(tableSort.GetSortStyle("RushTDShare"))"></span>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var f in fantasyShare)
                    {
                        <tr>
                            <td>
                                <a class="page-links" href="Players/@f.PlayerId"> @f.Name</a>&nbsp;
                                <a href="dist-graph/@f.Position/@f.PlayerId"> <i class="oi oi-pie-chart" /></a>
                            </td>
                            <td>@Math.Round(f.RecShare * 100)</td>
                            <td>@Math.Round(f.RecYDShare * 100)</td>
                            <td>@Math.Round(f.RecTDShare * 100)</td>
                            <td>@Math.Round(f.RushYDShare * 100)</td>
                            <td>@Math.Round(f.RushTDShare * 100)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}

@code {
    public string Position { get; set; } = "Quarterback";
    public string positionEnum { get; set; } = "";

    public List<FantasyPercentageModel>? fantasyShare = new();

    public bool loading { get; set; } = false;
    private bool shouldRender;
    protected override bool ShouldRender() => shouldRender;

    public TableSort tableSort = new();
    public Formatter format = new();

    public void SetPosition(ChangeEventArgs args)
    {
        fantasyShare?.Clear();
        tableSort = new();
        positionEnum = format.SetPosition(args);
    }
    public async Task Get()
    {
        loading = true;
        fantasyShare?.Clear();
        shouldRender = true;
        fantasyShare = await fantasyService.GetFantasyPercentageRequest(positionEnum);
        loading = false;
        shouldRender = true;
    }
    private void SetTable(string columnName) => fantasyShare = tableSort.SortTable<FantasyPercentageModel>(fantasyShare, columnName);

}
