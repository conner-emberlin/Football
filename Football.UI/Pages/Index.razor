@page "/"
@using System.Text.Json
@using System.Text.Json.Serialization
@using News.Models;
@inject IHttpClientFactory ClientFactory

<PageTitle>Index</PageTitle>
<h3>NFL News</h3>

@if (!badRequestError && articles!= null)
{
    foreach(var article in articles)
    {
        <div>
        <a href="@article.links.web.href"> @article.headline</a>
        <p>@article.description</p>
            @if (article.images.FirstOrDefault() != null){
            <img src="@article.images.FirstOrDefault().url" height="200" />
            }
        <hr style="width:75%;text-align:left;margin-left:0">
        </div>
        <br/>
    }
}

@code{

    private bool shouldRender;
    protected override bool ShouldRender() => shouldRender;
    private bool badRequestError;

    private EspnNews root = new();
    private List<Article> articles = new();
    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, "https://localhost:7028/api/News/espn");
        request.Headers.Add("Accept", "application/json");
        var client = ClientFactory.CreateClient();
        var response = await client.SendAsync(request);
        if (response.IsSuccessStatusCode)
        {
            var options = new JsonSerializerOptions { PropertyNameCaseInsensitive = true };
            using var responseStream = await response.Content.ReadAsStreamAsync();
            root = await JsonSerializer.DeserializeAsync<EspnNews>(responseStream, options);
            articles = root.articles;
        }
        else
        {
            badRequestError = true;
        }
        shouldRender = true;
    }




}
