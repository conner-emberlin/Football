@page "/MarketShare"
<PageTitle>Market Share</PageTitle>

@using Football.Client.Helpers;
@using Football.Client.Shared;
@using Football.Client.Interfaces;
@using Football.Shared.Models.Fantasy;

@inject IFantasyService fantasyService;

<h4>Market Share</h4>

<div>
    @foreach (var position in format.Positions(includeQB: false))
    {

        <input type="radio" name="players" id=" @position" value="@position"
        @onchange="SetPosition"
               checked=@(Position.Equals(position,StringComparison.OrdinalIgnoreCase)) />
        <label for="@position ">@position</label>

    }
</div>
<div style="height:10px;font-size:1px;">&nbsp;</div>
<button class="button-22" role="button" @onclick="HandleInput">
    Submit
</button>
<div style="height:10px;font-size:1px;">&nbsp;</div>

@if (loading)
{
    <div class="spinner"></div>
}

@if (filteredMarketShare.Count > 0)
{
    <EditForm model="this" OnSubmit="HandleSearch">
    <TextBoxName @bind-Value ="this.Value"/>
    </EditForm>
    <div class="table_container">
        <table class="base_table">
            <thead>
                <tr>
                    <th>Player</th>
                    <th>Team</th>   
                    <th>@positionEnum.ToString()Fantasy%</th>
                    <th>
                        <span class="sort-link" onclick="@(() => SetTable("RushAttShare"))">RushAtt%</span>
                        <span class="oi @(tableSort.GetSortStyle("RushAttShare"))"></span>
                    </th>
                    <th>
                        <span class="sort-link" onclick="@(() => SetTable("RushYdShare"))">RushYd%</span>
                        <span class="oi @(tableSort.GetSortStyle("RushYdShare"))"></span>
                    </th>
                    <th>
                        <span class="sort-link" onclick="@(() => SetTable("RushTdShare"))">RushTd%</span>
                        <span class="oi @(tableSort.GetSortStyle("RushTdShare"))"></span>
                    </th>
                    <th>
                        <span class="sort-link" onclick="@(() => SetTable("TargetShare"))">Target%</span>
                        <span class="oi @(tableSort.GetSortStyle("TargetShare"))"></span>
                    </th>
                    <th>
                        <span class="sort-link" onclick="@(() => SetTable("ReceptionShare"))">Rec%</span>
                        <span class="oi @(tableSort.GetSortStyle("ReceptionShare"))"></span>
                    </th>
                    <th>
                        <span class="sort-link" onclick="@(() => SetTable("RecYdShare"))">RecYd%</span>
                        <span class="oi @(tableSort.GetSortStyle("RecYdShare"))"></span>
                    </th>
                    <th>
                        <span class="sort-link" onclick="@(() => SetTable("RecTDShare"))">RecTd%</span>
                        <span class="oi @(tableSort.GetSortStyle("RecTDShare"))"></span>
                    </th>
                    <th> </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var market in filteredMarketShare)
                {
                    <tr>
                        <td>
                            <a class="page-links" href="Players/@market.PlayerId"> @market.Name</a>
                        </td>
                        <td>@market.Team</td>
                        <td>@Math.Round(market.FantasyShare * 100, 1) </td>
                        <td>@Math.Round(market.RushAttShare * 100, 1)</td>
                        <td>@Math.Round(market.RushYdShare * 100, 1)</td>
                        <td>@Math.Round(market.RushTDShare * 100, 1)</td>
                        <td>@Math.Round(market.TargetShare * 100, 1)</td>
                        <td>@Math.Round(market.ReceptionShare * 100, 1)</td>
                        <td>@Math.Round(market.RecYdShare * 100, 1)</td>
                        <td>@Math.Round(market.RecTDShare * 100, 1)</td>
                        <td><a href="share-graph/@market.Position/@market.PlayerId"> <i class="oi oi-bar-chart" /></a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {

    private string Position { get; set; } = "Runningback";
    private string positionEnum { get; set; } = "RB";
    private List<MarketShareModel>? marketShare = new();

    private bool loading { get; set; } = false;
    private bool shouldRender;

    private TableSort tableSort = new();
    private Formatter format = new();

    private string Value { get; set; } = "";
    private List<MarketShareModel> filteredMarketShare = new();

    protected override bool ShouldRender() => shouldRender;

    private void SetPosition(ChangeEventArgs args)
    {
        marketShare?.Clear();
        filteredMarketShare.Clear();
        Value = string.Empty;
        positionEnum = format.SetPosition(args);
    }
    private async Task HandleInput()
    {
        loading = true;
        marketShare?.Clear();
        filteredMarketShare.Clear();
        Value = string.Empty;
        shouldRender = true;
        marketShare = await fantasyService.GetMarketShareRequest(positionEnum);
        filteredMarketShare.AddRange(marketShare);
        loading = false;
        shouldRender = true;
    }

    private void HandleSearch()
    {
        filteredMarketShare.Clear();

        if (!string.IsNullOrEmpty(Value))
        {
            filteredMarketShare = marketShare.Where(m => m.Name.ToLower().Contains(Value.ToLower())).ToList();
            shouldRender = true;
        }
        else
        {
            filteredMarketShare.AddRange(marketShare);
        }
    }

    private void SetTable(string columnName) => filteredMarketShare = tableSort.SortTable<MarketShareModel>(filteredMarketShare, columnName);

}
