@using Football.Client.Helpers;
@using Football.Client.Interfaces;
@using Football.Shared.Models.Fantasy;

@inject IFantasyService fantasyService;
@page "/WaiverWire/"

@if (loading)
{
    <div class="spinner"></div>
}

else
{
    <h4>@GetHeader()</h4>
}

@if (candidates.Any())
{
    <div class="table_container">
        <table class="base_table">
            <thead>
                <tr>
                    <th></th>
                    <th>Name</th>
                    <th>Position</th>
                    <th>Team</th>
                    <th>Rostered%</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cand in candidates)
                {
                    var logoPhotoPath = cand.Team != string.Empty ?
                                         "https://localhost:7237/Logos/" + cand.Team + ".png" 
                                       : "https://localhost:7237/Logos/nfl.png";

                    var pos = cand.Position;                   
                    <tr>
                        <td>@form.Rank(candidates, cand)</td>
                        <td><a class="page-links" href="Players/@cand.PlayerId"> @cand.Name</a></td>
                        <td><b style="color:@form.PositionColor(pos)">@pos</b></td>
                        <td><img src="@logoPhotoPath" width="30" height="30"></td>
                        <td>@cand.RosteredPercentage</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<WaiverWireCandidateModel>? candidates = new();

    private bool shouldRender;
    private bool loading = false;

    private Formatter form = new();

    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        candidates = (await fantasyService.GetWaiverWireCandidatesRequest()).OrderByDescending(c => c.RosteredPercentage).ToList();
        loading = false;
        shouldRender = true;
    }

    private string GetHeader() => candidates.Any() ? "Waiver Wire - Week " + candidates.First().Week.ToString() : "Waiver Wire";
}

